# Seal-TK superbuild with no fancy stuff
ARG BASE_IMAGE=nvidia/cuda:9.1-cudnn7-devel-ubuntu16.04
FROM $BASE_IMAGE as base

# System Deps for VIAME
# Fletch system dependencies
RUN apt-get update -qq &&\
    apt-get install -y \
        curl \
    &&\
    apt-get install -y --no-install-recommends \
        apt-transport-https \
        ca-certificates \
        git \
        openssl \
        software-properties-common \
        wget \
        zip unzip \
        libgl1-mesa-dev \
        libexpat1-dev \
        libgtk2.0-dev \
        libxt-dev \
        libxml2-dev \
        libssl-dev \
        liblapack-dev \
        python3-dev \
        zlib1g-dev \
    && rm -rf /var/lib/apt/lists/*

## === === === === ===  Compile-time dependencies === === === === ===
FROM base as compiler

# Need CMake >= 3.11.4 for VIAME,
# Thus, install latest stable CMake 3.14.1
RUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | apt-key add - &&\
    apt-add-repository 'deb https://apt.kitware.com/ubuntu/ xenial main' &&\
    apt-get update -qq &&\
    apt-get install -qq \
        cmake\
        python-dev\
        python3-dev\
        &&\
    apt-get install -qq --no-install-recommends \
        build-essential\
        ninja-build \
        pkg-config \
    && rm -rf /var/lib/apt/lists/*

## -- -- -- -- -- --  Get pip the preferred way -- -- -- -- -- --
RUN curl https://bootstrap.pypa.io/get-pip.py -o /root/get-pip.py \
    && python3 /root/get-pip.py \
    && python2 /root/get-pip.py

RUN pip2 install --upgrade pip numpy &&\
    pip3 install --upgrade pip numpy
## -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --

## === === === === ===  Building VIAME === === === === ===
FROM compiler as viame

# Get VIAME
RUN git clone https://github.com/Kitware/VIAME.git /root/viame &&\
    cd /root/viame &&\
    git submodule update --init --recursive

RUN cd /root/viame &&\
    git checkout kamera/master &&\
    git submodule update --init --recursive

# Configure VIAME as a submodule
RUN cd /root/viame && mkdir build && cd build &&\
    cmake \
        -DCMAKE_BUILD_TYPE:STRING=Release \
        -DVIAME_BUILD_DEPENDENCIES:BOOL=ON \
        -DVIAME_BUILD_INTERNAL_PYTORCH:BOOL=OFF \
        -DVIAME_ENABLE_BURNOUT:BOOL=OFF \
        -DVIAME_DOWNLOAD_MODELS=ON \
        -DVIAME_DOWNLOAD_MODELS-ARCTIC-SEAL:BOOL=ON \
        -DVIAME_DOWNLOAD_MODELS-HABCAM:BOOL=OFF \
        -DVIAME_DOWNLOAD_MODELS-MOUSS:BOOL=OFF \
        -DVIAME_DOWNLOAD_MODELS-PYTORCH:BOOL=OFF \
        -DVIAME_ENABLE_CAFFE:BOOL=OFF \
        -DVIAME_ENABLE_CAMTRAWL:BOOL=OFF \
        -DVIAME_ENABLE_CUDA:BOOL=ON \
        -DVIAME_ENABLE_DOCS:BOOL=OFF \
        -DVIAME_ENABLE_FFMPEG:BOOL=OFF \
        -DVIAME_ENABLE_FASTER_RCNN:BOOL=OFF \
        -DVIAME_ENABLE_FLASK:BOOL=OFF \
        -DVIAME_ENABLE_ITK:BOOL=ON \
        -DVIAME_ENABLE_KWANT:BOOL=OFF \
        -DVIAME_ENABLE_MATLAB:BOOL=OFF \
        -DVIAME_ENABLE_OPENCV:BOOL=ON \
        -DVIAME_ENABLE_PYTHON:BOOL=ON \
        -DVIAME_ENABLE_PYTORCH:BOOL=OFF \
        -DVIAME_ENABLE_SCALLOP_TK:BOOL=OFF \
        -DVIAME_ENABLE_SEAL_TK:BOOL=OFF \
        -DVIAME_ENABLE_SMQTK:BOOL=OFF \
        -DVIAME_ENABLE_TENSORFLOW:BOOL=ON \
        -DVIAME_ENABLE_UW_PREDICTOR:BOOL=OFF \
        -DVIAME_ENABLE_VIVIA:BOOL=OFF \
        -DVIAME_ENABLE_VXL:BOOL=ON \
        -DVIAME_ENABLE_YOLO:BOOL=ON \
        -G Ninja \
        .. &&\
    ninja

## === === === === ===  Copy in build artifacts === === === === ===

FROM base

COPY --from=viame /root/viame/build/install /root/viame
WORKDIR /root/viame

